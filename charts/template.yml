---
# Source: lavapod/templates/rest/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-lavapod-rest
  labels:
    app.kubernetes.io/name: lavapod
    helm.sh/chart: lavapod-0.0.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1"
    app.kubernetes.io/managed-by: Tiller
spec:
  type: ClusterIP
  ports:
    - port: 8000
      targetPort: rest
      protocol: TCP
      name: rest
  selector:
    app.kubernetes.io/name: lavapod-rest
    app.kubernetes.io/instance: release-name
---
# Source: lavapod/templates/websocket/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-lavapod-websocket
  labels:
    app.kubernetes.io/name: lavapod
    helm.sh/chart: lavapod-0.0.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1"
    app.kubernetes.io/managed-by: Tiller
spec:
  type: ClusterIP
  ports:
    - port: 8000
      targetPort: websocket
      protocol: TCP
      name: websocket
  selector:
    app.kubernetes.io/name: lavapod-websocket
    app.kubernetes.io/instance: release-name
---
# Source: lavapod/templates/rest/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-lavapod-rest
  labels:
    app.kubernetes.io/name: lavapod
    helm.sh/chart: lavapod-0.0.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1"
    app.kubernetes.io/managed-by: Tiller
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: lavapod-rest
      app.kubernetes.io/instance: release-name
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: lavapod-rest
        app.kubernetes.io/instance: release-name
    spec:
      containers:
        - name: lavapod-rest
          image: "matthis974/lavapod:lavarest-stable"
          imagePullPolicy: IfNotPresent
          ports:
            - name: rest
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /_healz
              port: rest
          readinessProbe:
            httpGet:
              path: /_healz
              port: rest
          resources:
            limits:
              cpu: 10m
              memory: 30Mi
            requests:
              cpu: 6m
              memory: 15Mi
            
---
# Source: lavapod/templates/websocket/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-lavapod-websocket
  labels:
    app.kubernetes.io/name: lavapod
    helm.sh/chart: lavapod-0.0.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1"
    app.kubernetes.io/managed-by: Tiller
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: lavapod-websocket
      app.kubernetes.io/instance: release-name
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: lavapod-websocket
        app.kubernetes.io/instance: release-name
    spec:
      containers:
        - name: lavapod-websocket
          image: "matthis974/lavapod:lavasocket-stable"
          imagePullPolicy: IfNotPresent
          ports:
            - name: websocket
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /_healz
              port: websocket
          readinessProbe:
            httpGet:
              path: /_healz
              port: rest
          resources:
            limits:
              cpu: 10m
              memory: 30Mi
            requests:
              cpu: 6m
              memory: 15Mi
            
---
# Source: lavapod/templates/rest/ingress.yaml
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: release-name-lavapod-rest
  labels:
    app.kubernetes.io/name: lavapod
    helm.sh/chart: lavapod-0.0.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1"
    app.kubernetes.io/managed-by: Tiller
spec:
  rules:
    - host: "lavapod.my-totally-legit.domain"
      http:
        paths:
          - path: /
            backend:
              serviceName: release-name-lavapod-rest
              servicePort: rest
---
# Source: lavapod/templates/websocket/ingress.yaml
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: release-name-lavapod-websocket
  labels:
    app.kubernetes.io/name: lavapod
    helm.sh/chart: lavapod-0.0.1
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.1"
    app.kubernetes.io/managed-by: Tiller
spec:
  rules:
    - host: "lavapod-socket.my-totally-legit.domain"
      http:
        paths:
          - path: /
            backend:
              serviceName: release-name-lavapod-websocket
              servicePort: websocket
